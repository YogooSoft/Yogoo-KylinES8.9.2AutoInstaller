# ATTENTION: the file is generated by ansible, DO NOT modify it manually

{% if config['cluster.name'] is undefined and config['cluster']['name'] is undefined %}
cluster.name: {{ project_name }}
{% endif %}

{% if server_host is defined and config['network.host'] is undefined and config['network']['host'] is undefined %}
network.host: {{ server_host }}
{% endif %}
{% if http_port is defined and config['http.port'] is undefined and config['http']['port'] is undefined %}
http.port: {{ http_port }}
{% endif %}
{% if transport_port is defined %}
{% if version is version('6.7.0', '>=') and config['transport.port'] is undefined and config['transport']['port'] is undefined %}
transport.port: {{ transport_port }}
{% elif config['transport.tcp.port'] is undefined and config['transport']['tcp']['port'] is undefined %}
transport.tcp.port: {{ transport_port }}
{% endif %}
{% endif %}

path.data: {{ path_data.split(',') | unique | to_json }}
path.logs: {{ path_logs }}

node.name: {{ node_name }}

{% if version is version('8.0.0', '<') %}
node.master: {{ 'true' if roles is not defined or 'master' in roles else 'false' }}
node.data: {{ 'true' if roles is not defined or 'data' in roles else 'false' }}
node.ingest: {{ 'true' if roles is not defined or 'data' in roles else 'false' }}
{% if xpack|bool %}
node.ml: {{ 'true' if roles is undefined or 'ml' in roles else 'false' }}
{% endif %}
{% else %}
node.roles: {{ roles if roles is defined else ['master', 'data', 'ingest', 'remote_cluster_client'] }}
{% endif %}

{% if box_type is defined %}
node.attr.box_type: {{ box_type }}
{% endif %}
{% if zone is defined %}
node.attr.zone: {{ zone }}
{% endif %}

{% if version is version('7.0.0', '<') %}
{% if config['discovery.zen.fd.ping_interval'] is undefined and config['discovery']['zen']['fd']['ping_interval'] is undefined %}
discovery.zen.fd.ping_interval: 30s
{% endif %}
{% if config['discovery.zen.fd.ping_timeout'] is undefined and config['discovery']['zen']['fd']['ping_timeout'] is undefined %}
discovery.zen.fd.ping_timeout: 120s
{% endif %}
{% if config['discovery.zen.minimum_master_nodes'] is undefined and config['discovery']['zen']['minimum_master_nodes'] is undefined %}
discovery.zen.minimum_master_nodes: {{ minimum_master_nodes }}
{% endif %}
{% if config['discovery.zen.ping.unicast.hosts'] is undefined and config['discovery']['zen']['ping']['unicast']['hosts'] is undefined %}
discovery.zen.ping.unicast.hosts: {{ master_hosts | unique | to_json }}
{% endif %}
{% else %}
{% if config['discovery.seed_hosts'] is undefined and config['discovery']['seed_hosts'] is undefined %}
discovery.seed_hosts: {{ master_hosts | unique | to_json }}
{% endif %}
{% if config['cluster.initial_master_nodes'] is undefined and config['cluster']['initial_master_nodes'] is undefined %}
cluster.initial_master_nodes: {{ initial_master_nodes | unique | to_json }}
{% endif %}
{% if config['cluster.fault_detection.follower_check.interval'] is undefined and config['cluster']['fault_detection']['follower_check']['interval'] is undefined %}
cluster.fault_detection.follower_check.interval: 30s
{% endif %}
{% if config['cluster.fault_detection.follower_check.timeout'] is undefined and config['cluster']['fault_detection']['follower_check']['timeout'] is undefined %}
cluster.fault_detection.follower_check.timeout: 120s
{% endif %}
{% if config['cluster.fault_detection.leader_check.interval'] is undefined and config['cluster']['fault_detection']['leader_check']['interval'] is undefined %}
cluster.fault_detection.leader_check.interval: 30s
{% endif %}
{% if config['cluster.fault_detection.leader_check.timeout'] is undefined and config['cluster']['fault_detection']['leader_check']['timeout'] is undefined %}
cluster.fault_detection.leader_check.timeout: 120s
{% endif %}
{% if config['cluster.follower_lag.timeout'] is undefined and config['cluster']['follower_lag']['timeout'] is undefined %}
cluster.follower_lag.timeout: 600s
{% endif %}
#{% if config['cluster.join.timeout'] is undefined and config['cluster']['join']['timeout'] is undefined %}
#cluster.join.timeout: 600s
#{% endif %}
{% if config['cluster.publish.timeout'] is undefined and config['cluster']['publish']['timeout'] is undefined %}
cluster.publish.timeout: 600s
{% endif %}
{% endif %}

{% if use_gateway|bool and (roles is undefined or 'master' in roles) %}
{% if config['gateway.expected_nodes'] is undefined and config['gateway']['expected_nodes'] is undefined %}
gateway.expected_nodes: {{ gateway_expected_nodes }}
{% endif %}
{% if config['gateway.recover_after_time'] is undefined and config['gateway']['recover_after_time'] is undefined %}
gateway.recover_after_time: 10m
{% endif %}
{% if config['gateway.recover_after_data_nodes'] is undefined and config['gateway']['recover_after_data_nodes'] is undefined %}
gateway.recover_after_data_nodes: {{ gateway_recovery_nodes }}
{% endif %}
{% endif %}

{% if version is version('8.0.0', '>') %}
xpack.security.autoconfiguration.enabled: false
{% endif %}

{% if xpack|bool and xpack_security|bool %}
xpack.security.enabled: true

xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/elastic-certificates.p12
  truststore.path: certs/elastic-certificates.p12
{% if xpack_security_https|bool %}
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/elastic-certificates.p12
  truststore.path: certs/elastic-certificates.p12
{% endif %}

{% if version is version('7.0.0', '<') %}
xpack.security.authc.realms._native.type: native
xpack.security.authc.realms._native.order: 100
xpack.security.authc.realms._file.type: file
xpack.security.authc.realms._file.order: 1000
{% else %}
xpack.security.authc.realms.native._native.order: 100
xpack.security.authc.realms.file._file.order: 1000
{% endif %}
{% endif %}

{% if config %}
{{ config | to_nice_yaml(indent=2) }}
{% endif %}

thread_pool.write.queue_size: 600
